{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Matrimony Apis",
    "description": "API for Managing matrimony api calls",
    "contact": {
      "name": "API Support",
      "email": "jesmathew96@gmail.com"
    }
  },
  "host": "localhost:8000",
  "basePath": "/",
  "tags": [
    {
      "name": "TODO CRUD",
      "description": "TODO related apis"
    },
    {
      "name": "Todo",
      "description": "Todo App"
    }
  ],
  "schemes": [
    "http"
  ],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "phone": {
                  "example": "any"
                },
                "password": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "username": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "req",
            "in": "header",
            "type": "string"
          },
          {
            "name": "cookie",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "host",
            "in": "header",
            "type": "string"
          },
          {
            "name": "x-forwarded-for",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user-agent",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "example": "any"
                },
                "firstname": {
                  "example": "any"
                },
                "surname": {
                  "example": "any"
                },
                "dob": {
                  "example": "any"
                },
                "gender": {
                  "example": "any"
                },
                "maritalStatus": {
                  "example": "any"
                },
                "unmarriedReason": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "otp": {
                  "example": "any"
                },
                "status": {
                  "example": "any"
                },
                "denomination": {
                  "example": "any"
                },
                "city": {
                  "example": "any"
                },
                "state": {
                  "example": "any"
                },
                "country": {
                  "example": "any"
                },
                "pincode": {
                  "example": "any"
                },
                "height": {
                  "example": "any"
                },
                "weight": {
                  "example": "any"
                },
                "bodyType": {
                  "example": "any"
                },
                "complexion": {
                  "example": "any"
                },
                "eatingHabits": {
                  "example": "any"
                },
                "drink": {
                  "example": "any"
                },
                "smoke": {
                  "example": "any"
                },
                "education": {
                  "example": "any"
                },
                "specialization": {
                  "example": "any"
                },
                "bloodGroup": {
                  "example": "any"
                },
                "jobLocation": {
                  "example": "any"
                },
                "annualIncome": {
                  "example": "any"
                },
                "designation": {
                  "example": "any"
                },
                "motherTongue": {
                  "example": "any"
                },
                "language": {
                  "example": "any"
                },
                "disability": {
                  "example": "any"
                },
                "preferredProfilesState": {
                  "example": "any"
                },
                "fatherName": {
                  "example": "any"
                },
                "fatherOccupation": {
                  "example": "any"
                },
                "motherName": {
                  "example": "any"
                },
                "motherOccupation": {
                  "example": "any"
                },
                "numberOfBrother": {
                  "example": "any"
                },
                "numberOfSister": {
                  "example": "any"
                },
                "parentContact": {
                  "example": "any"
                },
                "churchName": {
                  "example": "any"
                },
                "churchPriest": {
                  "example": "any"
                },
                "pastorsContact": {
                  "example": "any"
                },
                "churchAddress": {
                  "example": "any"
                },
                "yearOfBaptism": {
                  "example": "any"
                },
                "ministry": {
                  "example": "any"
                },
                "selfDescrreq": {
                  "example": "any"
                },
                "partnersExpectations": {
                  "example": "any"
                },
                "domain": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/user/list": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "gender",
            "in": "query",
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/one": {
      "get": {
        "description": "",
        "parameters": [
          {
            "name": "req",
            "in": "header",
            "type": "string"
          },
          {
            "name": "cookie",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/user/update": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "req",
            "in": "header",
            "type": "string"
          },
          {
            "name": "cookie",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/interest/{id}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "req",
            "in": "header",
            "type": "string"
          },
          {
            "name": "cookie",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/api/shortlist/{id}": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "req",
            "in": "header",
            "type": "string"
          },
          {
            "name": "cookie",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "todoResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Success"
        }
      }
    },
    "errorResponse.400": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "The request was malformed or invalid. Please check the request parameters."
        }
      }
    },
    "errorResponse.401": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 401
        },
        "message": {
          "type": "string",
          "example": "Authentication failed or user lacks proper authorization."
        }
      }
    },
    "errorResponse.403": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 403
        },
        "message": {
          "type": "string",
          "example": "You do not have permission to access this resource."
        }
      }
    },
    "errorResponse.404": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "404"
        },
        "message": {
          "type": "string",
          "example": "The requested resource could not be found on the server."
        }
      }
    },
    "errorResponse.500": {
      "type": "object",
      "properties": {
        "code": {
          "type": "number",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "An unexpected error occurred on the server. Please try again later."
        }
      }
    }
  }
}